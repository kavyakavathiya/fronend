[{"/home/kavya/frontend-pipeline/src/index.js":"1","/home/kavya/frontend-pipeline/src/reportWebVitals.js":"2","/home/kavya/frontend-pipeline/src/App.js":"3","/home/kavya/frontend-pipeline/src/Home.jsx":"4","/home/kavya/frontend-pipeline/src/Connector.js":"5"},{"size":536,"mtime":1692953346589,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1692953346589,"results":"8","hashOfConfig":"7"},{"size":208,"mtime":1692955994737,"results":"9","hashOfConfig":"7"},{"size":10199,"mtime":1692956120347,"results":"10","hashOfConfig":"7"},{"size":1784,"mtime":1692953346585,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y9w2lu",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kavya/frontend-pipeline/src/index.js",[],[],"/home/kavya/frontend-pipeline/src/reportWebVitals.js",[],[],"/home/kavya/frontend-pipeline/src/App.js",[],[],"/home/kavya/frontend-pipeline/src/Home.jsx",["28"],[],"import React, { useEffect, useState, Fragment } from 'react';\nimport { ApiDeleteCall, ApiGetCall, ApiPostCall, ApiPutCall } from '../src/Connector';\nimport { Modal } from 'react-bootstrap';\nimport './common.css';\n\nfunction Testing() {\n  const [GridData, setGridData] = useState([]);\n  const [addpartsPopup, setAddpartsPopup] = useState(false);\n  const [FlagForAddUpdate, setFlagForAddUpdate] = useState(false);\n  const [FormData, setFormData] = useState({\n    name: '',\n    email: '',\n    contact: '',\n    city: '',\n    age: '',\n    id: ''\n  });\n\n  useEffect(() => {\n    GetPartData();\n    console.log(FormData);\n  }, []);\n\n  function GetPartData() {\n    ApiGetCall(\"/api/displayDeetails\").then((result) => {\n      if (result === undefined || result === \"\") {\n        alert(\"Something went wrong\");\n      } else {\n        const responseRs = JSON.parse(result);\n        console.log(responseRs);\n        setGridData(responseRs);\n      }\n    });\n  }\n\n  function SaveUser() {\n    var raw = JSON.stringify({\n      name: FormData.name,\n      email: FormData.email,\n      contact: FormData.contact,\n      city: FormData.city,\n      age: FormData.age\n    });\n    ApiPostCall(\"/api/addDetails\", raw).then((result) => {\n      if (result === undefined || result === \"\") {\n        alert(\"Something went wrong\");\n      } else {\n        const responseRs = result;\n        console.log(responseRs);\n        setAddpartsPopup(false);\n        if (responseRs.status === \"success\") {\n          setTimeout(function () {\n            window.location = \"/\";\n            GetPartData();\n          }, 1500);\n        }\n      }\n    });\n  }\n\n  function GetDataById(id) {\n    ApiGetCall(\"/api/selectOneUserDetails/\" + id).then((result) => {\n      if (result === undefined || result === \"\") {\n        alert(\"Something went wrong\");\n      } else {\n        const responseRs = JSON.parse(result);\n        console.log(responseRs);\n        setFormData({\n          ...FormData,\n          name: responseRs.name,\n          city: responseRs.city,\n          contact: responseRs.contact,\n          email: responseRs.email,\n          age: responseRs.age,\n          id: responseRs.user_id\n        });\n      }\n    });\n  }\n\n  function EditUser() {\n    var raw = JSON.stringify({\n      name: FormData.name,\n      email: FormData.email,\n      contact: FormData.contact,\n      city: FormData.city,\n      age: FormData.age\n    });\n    ApiPutCall(`/api/updateDetails/${FormData.id}`, raw).then((result) => {\n      if (result === undefined || result === \"\") {\n        alert(\"Something went wrong\");\n      } else {\n        const responseRs = result;\n        console.log(responseRs);\n        setAddpartsPopup(false);\n        if (responseRs.status === \"success\") {\n          setTimeout(function () {\n            window.location = \"/\";\n            GetPartData();\n          }, 1500);\n        }\n      }\n    });\n  }\n\n  function DeleteCall(id) {\n    ApiDeleteCall(`/api/deleteDetails/${id}`).then((result) => {\n      if (result === undefined || result === \"\") {\n        alert(\"Something went wrong\");\n      } else {\n        const responseRs = result;\n        console.log(responseRs);\n        setAddpartsPopup(false);\n        if (responseRs.status === \"success\") {\n          setTimeout(function () {\n            window.location = \"/\";\n            GetPartData();\n          }, 1500);\n        }\n      }\n    });\n  }\n\n  return (\n    <Fragment>\n      <div className=\"d-flex justify-content-between pe-0 align-items-center\" style={{ background: \"black\", padding: \"0.5%\" }}>\n        <div>\n          <h1 className=\"PageHeading\" style={{ color: \"white\" }}>Manage Customers</h1>\n        </div>\n        <div className=\"text-center d-flex justify-content-end align-items-end\"\n          onClick={(e) => { setAddpartsPopup(true); setFlagForAddUpdate(1) }}>\n          <label className=\"BorderBtn text-center\">\n            Add Customers\n            <img src=\"/images/AddInventory.svg\" alt='test' className=\"img-fluid ps-2\" />\n          </label>\n        </div>\n      </div>\n      <div style={{ height: \"50px\" }}></div>\n      <div className=\"GridBox mt-1 p-3\">\n        <div className=\"col-12\">\n          <div className='col-12 greyBox mt-1 data-table-container'>\n           \n            <table className=\"table data-table mb-0\">\n              <thead className='GridHeader'>\n                <tr>\n                  <th scope=\"col\" className='cursor-pointer fw-600 bg-dark text-light'>Name</th>\n                  <th scope=\"col\" className='cursor-pointer fw-600 bg-dark text-light'>Email</th>\n                  <th scope=\"col\" className='cursor-pointer fw-600 bg-dark text-light'>Contact</th>\n                  <th scope=\"col\" className='cursor-pointer fw-600 bg-dark text-light'>City</th>\n                  <th scope=\"col\" className='cursor-pointer fw-600 bg-dark text-light'>Age</th>\n                  <th scope=\"col\" className='cursor-pointer fw-600 bg-dark text-light'>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {GridData.map((item, i) => {\n                  var returData =\n                    <tr key={i} className={`OddEvenClass tableBorderHide `} style={{ height: '30px' }}>\n                      <td className='py-12'>{item.name}</td>\n                      <td className='py-12'>{item.email}</td>\n                      <td className='py-12'>{item.contact}</td>\n                      <td className='py-12'>{item.city}</td>\n                      <td className='py-12'>{item.age}</td>\n                      <td className='py-12'>\n                        <img\n                          src=\"/images/EditIconNew.svg\"\n                          alt='test' \n                          title=\"Edit\"\n                          className=\"img-fluid pe-2 cursor-pointer partsgetID\"\n                          onClick={(e) => { setAddpartsPopup(true); setFlagForAddUpdate(2); GetDataById(item.user_id) }}\n                        />\n                        <img\n                          src=\"/images/DeleteIcon.svg\"\n                          title=\"Delete\"\n                          alt='test' \n                          className=\"img-fluid cursor-pointer\"\n                          onClick={(e) => { DeleteCall(item.user_id) }}\n                        />\n                      </td>\n                    </tr>;\n                  return returData;\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n\n      <Modal show={addpartsPopup} size=\"l\">\n        <div className=\"pt-3 px-2\">\n          <div className=\"d-flex justify-content-between pe-0\">\n            <div>\n              {FlagForAddUpdate === 1 ?\n                <h5 className=\"fw-600\">Add User</h5> :\n                <h5 className=\"fw-600\">Edit User</h5>\n              }\n            </div>\n            <div className=\" mb-2  text-center d-flex justify-content-end align-items-end\">\n              <img src=\"/images/CanclePartsIson.svg\" style={{height:\"20px\"}}  alt='test' className=\"img-fluid ps-2\" onClick={(e) => { setAddpartsPopup(false); }} />\n            </div>\n          </div>\n\n          <img src=\"/images/HorizontalLine.svg\"  alt='test'  className=\"img-fluid w-100 my-2 postclass\" />\n\n          <div id=\"AddPartDiv\" className='parent'>\n            <div className=\"row pt-2\">\n              <div className=\"col-md-3 text-start\">Name</div>\n              <div className=\"col-md-9 ps-0\">\n                <input\n                  type=\"text\"\n                  autoComplete=\"off\"\n                  name=\"partName\"\n                  className=\"form-control partNamee\"\n                  value={FormData.name}\n                  onChange={(e) => { setFormData({ ...FormData, name: e.target.value }) }}\n                />\n              </div>\n            </div>\n            <div className=\"row pt-2\">\n              <div className=\"col-md-3 text-start\">Email</div>\n              <div className=\"col-md-9 ps-0\">\n                <input\n                  type=\"text\"\n                  autoComplete=\"off\"\n                  name=\"partName\"\n                  className=\"form-control partNamee\"\n                  value={FormData.email}\n                  onChange={(e) => { setFormData({ ...FormData, email: e.target.value }) }}\n                />\n              </div>\n            </div>\n            <div className=\"row pt-2\">\n              <div className=\"col-md-3 text-start\">Contact</div>\n              <div className=\"col-md-9 ps-0\">\n                <input\n                  type=\"text\"\n                  autoComplete=\"off\"\n                  name=\"partName\"\n                  className=\"form-control partNamee\"\n                  value={FormData.contact}\n                  onChange={(e) => { setFormData({ ...FormData, contact: e.target.value }) }}\n                />\n              </div>\n            </div>\n            <div className=\"row pt-2\">\n              <div className=\"col-md-3 text-start\">City</div>\n              <div className=\"col-md-9 ps-0\">\n                <input\n                  type=\"text\"\n                  autoComplete=\"off\"\n                  name=\"partName\"\n                  className=\"form-control partNamee\"\n                  value={FormData.city}\n                  onChange={(e) => { setFormData({ ...FormData, city: e.target.value }) }}\n                />\n              </div>\n            </div>\n            <div className=\"row pt-2\">\n              <div className=\"col-md-3 text-start\">Age</div>\n              <div className=\"col-md-9 ps-0\">\n                <input\n                  type=\"text\"\n                  autoComplete=\"off\"\n                  name=\"partName\"\n                  className=\"form-control partNamee\"\n                  value={FormData.age}\n                  onChange={(e) => { setFormData({ ...FormData, age: e.target.value }) }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"col-12 text-center py-4\">\n            {FlagForAddUpdate === 1 ?\n              <button className=\"SaveBtn\" onClick={(e) => SaveUser(e)}> Add User </button> :\n              <button className=\"SaveBtn\" onClick={(e) => EditUser(e)}> Update User </button>\n            }\n          </div>\n        </div>\n      </Modal>\n    </Fragment>\n  );\n}\n\nexport default Testing;\n","/home/kavya/frontend-pipeline/src/Connector.js",[],[],{"ruleId":"29","severity":1,"message":"30","line":22,"column":6,"nodeType":"31","endLine":22,"endColumn":8,"suggestions":"32"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'FormData'. Either include it or remove the dependency array.","ArrayExpression",["33"],{"desc":"34","fix":"35"},"Update the dependencies array to be: [FormData]",{"range":"36","text":"37"},[618,620],"[FormData]"]